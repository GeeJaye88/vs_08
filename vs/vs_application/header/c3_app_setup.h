////////////////////////////////////////////////////////////////////////////////
// ---------- vs_app_setup.h ----------
/*!
\file vs_app_setup.h
\brief Application interface setup
\author Gareth Edwards
\note Generated by app_setup application.
*/


// ---------- #DEFINE ----------
//
// Step 1: Create application #define
//
#define VS_CAMERA_03


// ---------- NAME ----------
//
//Included in vs_sys_windows.cpp
//
// Step 2: Initialise application & development names
//
#ifdef VS_APPLICATION_APPNAME
{
   INT result = 0;
   result = virtual_surface.sys_context->SetChar(
         virtual_surface.sys_context->DEV_ENV,
         "vs"
      );
   result = virtual_surface.sys_context->SetChar(
         virtual_surface.sys_context->APP_NAME,
         "camera_03"
      );
}
#undef VS_APPLICATION_APPNAME
#endif


// ---------- HEADER ----------
//
//Included in vs_app_interface.cpp
//
// Step 4: Include application header
//
#ifdef VS_APPLICATION_INCLUDE
#include "../../vs_application/camera_03/header/c3_application.h"
#undef VS_APPLICATION_INCLUDE
#endif


// ---------- SOCKET ----------
//
//Included in vs_app_interface.cpp
//
// Step 5: Initialise application socket
//
#ifdef VS_APPLICATION_SOCKET
camera_03::application *application;
#undef VS_APPLICATION_SOCKET
#endif


// ---------- POINTER ----------
//
//Included in vs_app_interface.cpp
//
// Step 6: Initialise application interface
//
#ifdef VS_APPLICATION_POINTER
if ( !strcmp(application_name, "camera_03") )
{
application_socket.application = new camera_03::application();
ptr_to_application_framework = &AppInterface::application;;
}
#undef VS_APPLICATION_POINTER
#endif


